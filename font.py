import framebuffer 
roboto = [[18, 30, b'\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xe7\xc0\xff\x07\xc0\xf8\x07\xc0\xe0\x07\xc0\xe0\x07\xc0\xe0\x07\xc0\xe7\x07\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0'],
[18, 30, b'\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xfc\x0f\xc0\xf0\x03\xc0\xe0\x01\xc0\xc0\x00\xc0\xc1\xe0\xc0\x83\xe0\xc0\x83\xf0@\x83\xf0\xc0\xff\xe0\xc0\xff\xe0\xc0\xff\xc1\xc0\xff\x81\xc0\xff\x03\xc0\xfe\x07\xc0\xfc\x0f\xc0\xfc\x1f\xc0\xf8?\xc0\xf0\x7f\xc0\xe0\xff\xc0\xc0\x00@\x80\x00@\x80\x00@\x80\x00@'],
[18, 30, b'\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xfc\x0f\xc0\xf0\x03\xc0\xc0\x01\xc0\xc0\x00\xc0\x81\xe0\xc0\x83\xf0@\xff\xf0@\xff\xf0@\xff\xe0\xc0\xfc\x01\xc0\xfc\x03\xc0\xfc\x03\xc0\xfc\x00\xc0\xff\xe0\xc0\xff\xf0@\xff\xf0@\x83\xf0@\x83\xf0@\x81\xe0@\xc0\x00\xc0\xc0\x00\xc0\xf0\x03\xc0\xfc\x0f\xc0'],
[18, 30, b'\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xc1\xc0\xff\x81\xc0\xff\x81\xc0\xff\x01\xc0\xfe\x01\xc0\xfe\x01\xc0\xfc\x01\xc0\xfc\x01\xc0\xf8A\xc0\xf0\xc1\xc0\xf0\xc1\xc0\xe1\xc1\xc0\xc1\xc1\xc0\xc3\xc1\xc0\x80\x00\x00\x80\x00\x00\x80\x00\x00\x80\x00\x00\xff\xc1\xc0\xff\xc1\xc0\xff\xc1\xc0\xff\xc1\xc0\xff\xc1\xc0'],
[18, 30, b'\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xe0\x00\xc0\xe0\x00\xc0\xe0\x00\xc0\xe0\x00\xc0\xe1\xff\xc0\xe1\xff\xc0\xe1\xff\xc0\xc1\xff\xc0\xc1\x07\xc0\xc0\x01\xc0\xc0\x00\xc0\xc0\x00\xc0\xfb\xe0@\xff\xf0@\xff\xf0@\xff\xf0@\x83\xf0@\xc1\xf0@\xc1\xe0@\xc0\x00\xc0\xe0\x01\xc0\xf0\x03\xc0\xfc\x07\xc0'],
[18, 30, b'\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xc3\xc0\xfe\x03\xc0\xfc\x03\xc0\xf8\x03\xc0\xf0?\xc0\xe0\x7f\xc0\xe0\xff\xc0\xc1\xff\xc0\xc1\x03\xc0\xc2\x01\xc0\xc0\x00\xc0\x80\x00@\x81\xe0@\x83\xf0@\x83\xf0@\x83\xf8@\xc3\xf0@\xc1\xf0@\xc0\xe0@\xe0\x00\xc0\xf0\x00\xc0\xf8\x03\xc0\xfe\x07\xc0'],
[18, 30, b'\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\x80\x00@\x80\x00@\x80\x00@\x80\x00@\xff\xf0\xc0\xff\xe0\xc0\xff\xe1\xc0\xff\xc1\xc0\xff\xc1\xc0\xff\x83\xc0\xff\x83\xc0\xff\x07\xc0\xff\x07\xc0\xff\x07\xc0\xfe\x0f\xc0\xfe\x0f\xc0\xfc\x1f\xc0\xfc\x1f\xc0\xf8?\xc0\xf8?\xc0\xf0?\xc0\xf0\x7f\xc0\xf0\x7f\xc0'],
[18, 30, b'\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xfc\x0f\xc0\xf0\x03\xc0\xe0\x01\xc0\xc0\x00\xc0\xc1\xe0\xc0\xc1\xf0@\xc1\xf0@\xc1\xf0\xc0\xc1\xe0\xc0\xe0\x01\xc0\xf0\x03\xc0\xf0\x03\xc0\xe0\x00\xc0\xc0\xe0\xc0\xc1\xf0@\x83\xf0@\x83\xf0@\x81\xf0@\xc1\xe0@\xc0\x00\xc0\xe0\x00\xc0\xf0\x01\xc0\xfc\x07\xc0'],
[18, 30, b'\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xfc\x0f\xc0\xf0\x03\xc0\xe0\x01\xc0\xe0\x01\xc0\xc1\xe0\xc0\xc1\xf0\xc0\x83\xf0@\x83\xf0@\x83\xf0@\x83\xf0@\xc1\xf0@\xc1\xe0@\xc0\x00@\xe0\x00@\xf0\x00@\xf80\xc0\xff\xe0\xc0\xff\xc1\xc0\xff\x01\xc0\xf8\x03\xc0\xf8\x07\xc0\xf8\x1f\xc0\xf8\x7f\xc0'],
[18, 30, b'\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xff\xff\xc0\xfc\x0f\xc0\xf0\x03\xc0\xe0\x01\xc0\xe0\x00\xc0\xc1\xe0\xc0\xc1\xf0@\xc3\xf0@\x83\xf0@\x83\xf0@\x83\xf0@\x83\xf0@\x83\xf0@\x83\xf0@\x83\xf0@\x83\xf0@\xc3\xf0@\xc3\xf0@\xc1\xf0@\xc1\xe0\xc0\xe0\x00\xc0\xe0\x01\xc0\xf0\x03\xc0\xfc\x0f\xc0'],
[9, 30, b'\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xe3\x80\xc1\x80\xc1\x80\xc1\x80\xe3\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xe3\x80\xc1\x80\xc1\x80\xc1\x80\xe3\x80'],

]
def text(string, x, y, buffer):
    characters = '1234567890:'
    index = 0
    for i in string:
        char_index = characters.index(i)  # Find the index of the character
        char_data = roboto[char_index]  # Get the font data

     
        charBuf = framebuf.FrameBuffer(bytearray(char_data[2]), char_data[0], char_data[1], framebuf.MONO_HLSB)

        buffer.blit(charBuf, x+index, y)
        index += char_data[0]
    
